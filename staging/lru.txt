design an LRU based cache....

Solution: hash with doubly linked list. When ever adding something it is added to the tail of the list. if the list 
	is greater than n then an element is removed from the head of the list. 
	when an element is accessed it is cut from the list and added to the tail.

in pseudo code:
	if element in hash:
		get the link to the list
		cut element from the list
	else:
		add element to the hash
		if size of cache == n-1:
			cut 1 element from the head of the list
	add element to the tail of the list
